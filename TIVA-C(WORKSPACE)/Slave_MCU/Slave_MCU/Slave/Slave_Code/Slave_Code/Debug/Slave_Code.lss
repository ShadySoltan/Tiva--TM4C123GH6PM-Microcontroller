
Slave_Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000084  00800060  000007e6  0000085a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000008de  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000910  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  0000094c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001e3e  00000000  00000000  00000a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a1b  00000000  00000000  0000289a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b64  00000000  00000000  000032b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  00003e1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000097b  00000000  00000000  0000400c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000faa  00000000  00000000  00004987  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00005931  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ee       	ldi	r30, 0xE6	; 230
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 3e       	cpi	r26, 0xE4	; 228
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 05 01 	call	0x20a	; 0x20a <main>
  7a:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_Cmd>:
  82:	cf 93       	push	r28
  84:	c8 2f       	mov	r28, r24
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	89 e0       	ldi	r24, 0x09	; 9
  8a:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
  8e:	80 e0       	ldi	r24, 0x00	; 0
  90:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <DIO_ReadPort>
  94:	8f 70       	andi	r24, 0x0F	; 15
  96:	9c 2f       	mov	r25, r28
  98:	90 7f       	andi	r25, 0xF0	; 240
  9a:	68 2f       	mov	r22, r24
  9c:	69 2b       	or	r22, r25
  9e:	80 e0       	ldi	r24, 0x00	; 0
  a0:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_WritePort>
  a4:	60 e0       	ldi	r22, 0x00	; 0
  a6:	8b e0       	ldi	r24, 0x0B	; 11
  a8:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	8f e8       	ldi	r24, 0x8F	; 143
  ae:	91 e0       	ldi	r25, 0x01	; 1
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <LCD_Cmd+0x2e>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <LCD_Cmd+0x34>
  b6:	00 00       	nop
  b8:	61 e0       	ldi	r22, 0x01	; 1
  ba:	8b e0       	ldi	r24, 0x0B	; 11
  bc:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c0:	8f e1       	ldi	r24, 0x1F	; 31
  c2:	9e e4       	ldi	r25, 0x4E	; 78
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <LCD_Cmd+0x42>
  c8:	00 c0       	rjmp	.+0      	; 0xca <LCD_Cmd+0x48>
  ca:	00 00       	nop
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <DIO_ReadPort>
  d2:	90 e1       	ldi	r25, 0x10	; 16
  d4:	c9 9f       	mul	r28, r25
  d6:	90 01       	movw	r18, r0
  d8:	11 24       	eor	r1, r1
  da:	8f 70       	andi	r24, 0x0F	; 15
  dc:	68 2f       	mov	r22, r24
  de:	62 2b       	or	r22, r18
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_WritePort>
  e6:	60 e0       	ldi	r22, 0x00	; 0
  e8:	8b e0       	ldi	r24, 0x0B	; 11
  ea:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ee:	8f e8       	ldi	r24, 0x8F	; 143
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <LCD_Cmd+0x70>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <LCD_Cmd+0x76>
  f8:	00 00       	nop
  fa:	61 e0       	ldi	r22, 0x01	; 1
  fc:	8b e0       	ldi	r24, 0x0B	; 11
  fe:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	8f e3       	ldi	r24, 0x3F	; 63
 104:	9f e1       	ldi	r25, 0x1F	; 31
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <LCD_Cmd+0x84>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_Cmd+0x8a>
 10c:	00 00       	nop
 10e:	cf 91       	pop	r28
 110:	08 95       	ret

00000112 <LCD_Init>:
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	8a e0       	ldi	r24, 0x0A	; 10
 116:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
 11a:	61 e0       	ldi	r22, 0x01	; 1
 11c:	8b e0       	ldi	r24, 0x0B	; 11
 11e:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	89 ef       	ldi	r24, 0xF9	; 249
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <LCD_Init+0x16>
 130:	00 c0       	rjmp	.+0      	; 0x132 <LCD_Init+0x20>
 132:	00 00       	nop
 134:	83 e3       	ldi	r24, 0x33	; 51
 136:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
 13a:	82 e3       	ldi	r24, 0x32	; 50
 13c:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
 140:	88 e2       	ldi	r24, 0x28	; 40
 142:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
 146:	86 e0       	ldi	r24, 0x06	; 6
 148:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
 14c:	8c e0       	ldi	r24, 0x0C	; 12
 14e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
 152:	08 95       	ret

00000154 <LCD_Char>:
 154:	cf 93       	push	r28
 156:	c8 2f       	mov	r28, r24
 158:	61 e0       	ldi	r22, 0x01	; 1
 15a:	89 e0       	ldi	r24, 0x09	; 9
 15c:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <DIO_ReadPort>
 166:	8f 70       	andi	r24, 0x0F	; 15
 168:	9c 2f       	mov	r25, r28
 16a:	90 7f       	andi	r25, 0xF0	; 240
 16c:	68 2f       	mov	r22, r24
 16e:	69 2b       	or	r22, r25
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_WritePort>
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	8b e0       	ldi	r24, 0x0B	; 11
 17a:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 17e:	8f e8       	ldi	r24, 0x8F	; 143
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <LCD_Char+0x2e>
 186:	00 c0       	rjmp	.+0      	; 0x188 <LCD_Char+0x34>
 188:	00 00       	nop
 18a:	61 e0       	ldi	r22, 0x01	; 1
 18c:	8b e0       	ldi	r24, 0x0B	; 11
 18e:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 192:	8f e1       	ldi	r24, 0x1F	; 31
 194:	9e e4       	ldi	r25, 0x4E	; 78
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <LCD_Char+0x42>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <LCD_Char+0x48>
 19c:	00 00       	nop
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <DIO_ReadPort>
 1a4:	90 e1       	ldi	r25, 0x10	; 16
 1a6:	c9 9f       	mul	r28, r25
 1a8:	90 01       	movw	r18, r0
 1aa:	11 24       	eor	r1, r1
 1ac:	8f 70       	andi	r24, 0x0F	; 15
 1ae:	68 2f       	mov	r22, r24
 1b0:	62 2b       	or	r22, r18
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_WritePort>
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	8b e0       	ldi	r24, 0x0B	; 11
 1bc:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c0:	8f e8       	ldi	r24, 0x8F	; 143
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <LCD_Char+0x70>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <LCD_Char+0x76>
 1ca:	00 00       	nop
 1cc:	61 e0       	ldi	r22, 0x01	; 1
 1ce:	8b e0       	ldi	r24, 0x0B	; 11
 1d0:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d4:	8f e3       	ldi	r24, 0x3F	; 63
 1d6:	9f e1       	ldi	r25, 0x1F	; 31
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <LCD_Char+0x84>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <LCD_Char+0x8a>
 1de:	00 00       	nop
 1e0:	cf 91       	pop	r28
 1e2:	08 95       	ret

000001e4 <LCD_String>:
 1e4:	0f 93       	push	r16
 1e6:	1f 93       	push	r17
 1e8:	cf 93       	push	r28
 1ea:	8c 01       	movw	r16, r24
 1ec:	c0 e0       	ldi	r28, 0x00	; 0
 1ee:	03 c0       	rjmp	.+6      	; 0x1f6 <LCD_String+0x12>
 1f0:	0e 94 aa 00 	call	0x154	; 0x154 <LCD_Char>
 1f4:	cf 5f       	subi	r28, 0xFF	; 255
 1f6:	f8 01       	movw	r30, r16
 1f8:	ec 0f       	add	r30, r28
 1fa:	f1 1d       	adc	r31, r1
 1fc:	80 81       	ld	r24, Z
 1fe:	81 11       	cpse	r24, r1
 200:	f7 cf       	rjmp	.-18     	; 0x1f0 <LCD_String+0xc>
 202:	cf 91       	pop	r28
 204:	1f 91       	pop	r17
 206:	0f 91       	pop	r16
 208:	08 95       	ret

0000020a <main>:
#include "SPI.h"
#include "LCD.h"
#include "DIO.h"

int main(void)
{
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	00 d0       	rcall	.+0      	; 0x210 <main+0x6>
 210:	00 d0       	rcall	.+0      	; 0x212 <main+0x8>
 212:	cd b7       	in	r28, 0x3d	; 61
 214:	de b7       	in	r29, 0x3e	; 62
	DIO_Init(); //Initialize DIO Pins of Slave MCU
 216:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <DIO_Init>
	LCD_Init();
 21a:	0e 94 89 00 	call	0x112	; 0x112 <LCD_Init>
	SPI_ConfigTypes SPI_options = {Slave,MSB,SPIClock_64,DoupleSpeedDisable}; //Slave SPI Config Options
 21e:	19 82       	std	Y+1, r1	; 0x01
 220:	1a 82       	std	Y+2, r1	; 0x02
 222:	82 e0       	ldi	r24, 0x02	; 2
 224:	8b 83       	std	Y+3, r24	; 0x03
 226:	1c 82       	std	Y+4, r1	; 0x04
	SPI_Init(&SPI_options); //Initialize Slave SPI
 228:	ce 01       	movw	r24, r28
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	0e 94 9a 03 	call	0x734	; 0x734 <SPI_Init>
	
	LCD_String("All LEDs are OFF");
 230:	80 ea       	ldi	r24, 0xA0	; 160
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_String>
	
	while (1)
	{	
		u8 Received_From_Master = STD_Low;
	
		Received_From_Master = SPI_TxRx('0');
 238:	80 e3       	ldi	r24, 0x30	; 48
 23a:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <SPI_TxRx>
		
		switch(Received_From_Master)
 23e:	81 33       	cpi	r24, 0x31	; 49
 240:	51 f0       	breq	.+20     	; 0x256 <main+0x4c>
 242:	20 f4       	brcc	.+8      	; 0x24c <main+0x42>
 244:	80 33       	cpi	r24, 0x30	; 48
 246:	09 f4       	brne	.+2      	; 0x24a <main+0x40>
 248:	5d c0       	rjmp	.+186    	; 0x304 <main+0xfa>
 24a:	f6 cf       	rjmp	.-20     	; 0x238 <main+0x2e>
 24c:	82 33       	cpi	r24, 0x32	; 50
 24e:	01 f1       	breq	.+64     	; 0x290 <main+0x86>
 250:	83 33       	cpi	r24, 0x33	; 51
 252:	d9 f1       	breq	.+118    	; 0x2ca <main+0xc0>
 254:	f1 cf       	rjmp	.-30     	; 0x238 <main+0x2e>
		{
			case '1':
			if(DIO_ReadChannel(DIO_ChannelC2) == STD_Low)
 256:	82 e1       	ldi	r24, 0x12	; 18
 258:	0e 94 18 02 	call	0x430	; 0x430 <DIO_ReadChannel>
 25c:	81 11       	cpse	r24, r1
 25e:	0c c0       	rjmp	.+24     	; 0x278 <main+0x6e>
			{
				DIO_WriteChannel(DIO_ChannelC2,STD_High);
 260:	61 e0       	ldi	r22, 0x01	; 1
 262:	82 e1       	ldi	r24, 0x12	; 18
 264:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
				LCD_Cmd(0x01);
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
				LCD_String("LED0 ON");				
 26e:	81 eb       	ldi	r24, 0xB1	; 177
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_String>
 276:	e0 cf       	rjmp	.-64     	; 0x238 <main+0x2e>
			}
			else
			{
				DIO_WriteChannel(DIO_ChannelC2,STD_Low);
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	82 e1       	ldi	r24, 0x12	; 18
 27c:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
				LCD_Cmd(0x01);
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
				LCD_String("LED0 OFF");				
 286:	89 eb       	ldi	r24, 0xB9	; 185
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_String>
 28e:	d4 cf       	rjmp	.-88     	; 0x238 <main+0x2e>
			}

			break;
			
			case '2':
			if(DIO_ReadChannel(DIO_ChannelC7) == STD_Low)
 290:	87 e1       	ldi	r24, 0x17	; 23
 292:	0e 94 18 02 	call	0x430	; 0x430 <DIO_ReadChannel>
 296:	81 11       	cpse	r24, r1
 298:	0c c0       	rjmp	.+24     	; 0x2b2 <main+0xa8>
			{
				DIO_WriteChannel(DIO_ChannelC7,STD_High);
 29a:	61 e0       	ldi	r22, 0x01	; 1
 29c:	87 e1       	ldi	r24, 0x17	; 23
 29e:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
				LCD_Cmd(0x01);
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
				LCD_String("LED1 ON");
 2a8:	82 ec       	ldi	r24, 0xC2	; 194
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_String>
 2b0:	c3 cf       	rjmp	.-122    	; 0x238 <main+0x2e>
			}
			else
			{
				DIO_WriteChannel(DIO_ChannelC7,STD_Low);
 2b2:	60 e0       	ldi	r22, 0x00	; 0
 2b4:	87 e1       	ldi	r24, 0x17	; 23
 2b6:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
				LCD_Cmd(0x01);
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
				LCD_String("LED1 OFF");
 2c0:	8a ec       	ldi	r24, 0xCA	; 202
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_String>
 2c8:	b7 cf       	rjmp	.-146    	; 0x238 <main+0x2e>
			}
						
			break;
			
			case '3':
			if(DIO_ReadChannel(DIO_ChannelD3) == STD_Low)
 2ca:	8b e1       	ldi	r24, 0x1B	; 27
 2cc:	0e 94 18 02 	call	0x430	; 0x430 <DIO_ReadChannel>
 2d0:	81 11       	cpse	r24, r1
 2d2:	0c c0       	rjmp	.+24     	; 0x2ec <main+0xe2>
			{
				DIO_WriteChannel(DIO_ChannelD3,STD_High);
 2d4:	61 e0       	ldi	r22, 0x01	; 1
 2d6:	8b e1       	ldi	r24, 0x1B	; 27
 2d8:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
				LCD_Cmd(0x01);
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
				LCD_String("LED2 ON");
 2e2:	83 ed       	ldi	r24, 0xD3	; 211
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_String>
 2ea:	a6 cf       	rjmp	.-180    	; 0x238 <main+0x2e>
			}
			else
			{
				DIO_WriteChannel(DIO_ChannelD3,STD_Low);
 2ec:	60 e0       	ldi	r22, 0x00	; 0
 2ee:	8b e1       	ldi	r24, 0x1B	; 27
 2f0:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
				LCD_Cmd(0x01);
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
				LCD_String("LED2 OFF");
 2fa:	8b ed       	ldi	r24, 0xDB	; 219
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_String>
 302:	9a cf       	rjmp	.-204    	; 0x238 <main+0x2e>
			}
			break;
			
			case '0':
			DIO_WriteChannel(DIO_ChannelC2,STD_Low);
 304:	60 e0       	ldi	r22, 0x00	; 0
 306:	82 e1       	ldi	r24, 0x12	; 18
 308:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelC7,STD_Low);
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	87 e1       	ldi	r24, 0x17	; 23
 310:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
			DIO_WriteChannel(DIO_ChannelD3,STD_Low);
 314:	60 e0       	ldi	r22, 0x00	; 0
 316:	8b e1       	ldi	r24, 0x1B	; 27
 318:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WriteChannel>
			
			LCD_Cmd(0x01);
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Cmd>
			LCD_String("All LEDs are OFF");
 322:	80 ea       	ldi	r24, 0xA0	; 160
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LCD_String>
			break;
 32a:	86 cf       	rjmp	.-244    	; 0x238 <main+0x2e>

0000032c <DIO_WriteChannel>:
 32c:	98 2f       	mov	r25, r24
 32e:	96 95       	lsr	r25
 330:	96 95       	lsr	r25
 332:	96 95       	lsr	r25
 334:	87 70       	andi	r24, 0x07	; 7
 336:	91 30       	cpi	r25, 0x01	; 1
 338:	21 f1       	breq	.+72     	; 0x382 <DIO_WriteChannel+0x56>
 33a:	30 f0       	brcs	.+12     	; 0x348 <DIO_WriteChannel+0x1c>
 33c:	92 30       	cpi	r25, 0x02	; 2
 33e:	f1 f1       	breq	.+124    	; 0x3bc <DIO_WriteChannel+0x90>
 340:	93 30       	cpi	r25, 0x03	; 3
 342:	09 f4       	brne	.+2      	; 0x346 <DIO_WriteChannel+0x1a>
 344:	58 c0       	rjmp	.+176    	; 0x3f6 <DIO_WriteChannel+0xca>
 346:	08 95       	ret
 348:	61 30       	cpi	r22, 0x01	; 1
 34a:	69 f4       	brne	.+26     	; 0x366 <DIO_WriteChannel+0x3a>
 34c:	4b b3       	in	r20, 0x1b	; 27
 34e:	21 e0       	ldi	r18, 0x01	; 1
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	b9 01       	movw	r22, r18
 354:	02 c0       	rjmp	.+4      	; 0x35a <DIO_WriteChannel+0x2e>
 356:	66 0f       	add	r22, r22
 358:	77 1f       	adc	r23, r23
 35a:	8a 95       	dec	r24
 35c:	e2 f7       	brpl	.-8      	; 0x356 <DIO_WriteChannel+0x2a>
 35e:	cb 01       	movw	r24, r22
 360:	84 2b       	or	r24, r20
 362:	8b bb       	out	0x1b, r24	; 27
 364:	08 95       	ret
 366:	4b b3       	in	r20, 0x1b	; 27
 368:	21 e0       	ldi	r18, 0x01	; 1
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	b9 01       	movw	r22, r18
 36e:	02 c0       	rjmp	.+4      	; 0x374 <DIO_WriteChannel+0x48>
 370:	66 0f       	add	r22, r22
 372:	77 1f       	adc	r23, r23
 374:	8a 95       	dec	r24
 376:	e2 f7       	brpl	.-8      	; 0x370 <DIO_WriteChannel+0x44>
 378:	cb 01       	movw	r24, r22
 37a:	80 95       	com	r24
 37c:	84 23       	and	r24, r20
 37e:	8b bb       	out	0x1b, r24	; 27
 380:	08 95       	ret
 382:	61 30       	cpi	r22, 0x01	; 1
 384:	69 f4       	brne	.+26     	; 0x3a0 <DIO_WriteChannel+0x74>
 386:	48 b3       	in	r20, 0x18	; 24
 388:	21 e0       	ldi	r18, 0x01	; 1
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	b9 01       	movw	r22, r18
 38e:	02 c0       	rjmp	.+4      	; 0x394 <DIO_WriteChannel+0x68>
 390:	66 0f       	add	r22, r22
 392:	77 1f       	adc	r23, r23
 394:	8a 95       	dec	r24
 396:	e2 f7       	brpl	.-8      	; 0x390 <DIO_WriteChannel+0x64>
 398:	cb 01       	movw	r24, r22
 39a:	84 2b       	or	r24, r20
 39c:	88 bb       	out	0x18, r24	; 24
 39e:	08 95       	ret
 3a0:	48 b3       	in	r20, 0x18	; 24
 3a2:	21 e0       	ldi	r18, 0x01	; 1
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	b9 01       	movw	r22, r18
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <DIO_WriteChannel+0x82>
 3aa:	66 0f       	add	r22, r22
 3ac:	77 1f       	adc	r23, r23
 3ae:	8a 95       	dec	r24
 3b0:	e2 f7       	brpl	.-8      	; 0x3aa <DIO_WriteChannel+0x7e>
 3b2:	cb 01       	movw	r24, r22
 3b4:	80 95       	com	r24
 3b6:	84 23       	and	r24, r20
 3b8:	88 bb       	out	0x18, r24	; 24
 3ba:	08 95       	ret
 3bc:	61 30       	cpi	r22, 0x01	; 1
 3be:	69 f4       	brne	.+26     	; 0x3da <DIO_WriteChannel+0xae>
 3c0:	45 b3       	in	r20, 0x15	; 21
 3c2:	21 e0       	ldi	r18, 0x01	; 1
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	b9 01       	movw	r22, r18
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <DIO_WriteChannel+0xa2>
 3ca:	66 0f       	add	r22, r22
 3cc:	77 1f       	adc	r23, r23
 3ce:	8a 95       	dec	r24
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <DIO_WriteChannel+0x9e>
 3d2:	cb 01       	movw	r24, r22
 3d4:	84 2b       	or	r24, r20
 3d6:	85 bb       	out	0x15, r24	; 21
 3d8:	08 95       	ret
 3da:	45 b3       	in	r20, 0x15	; 21
 3dc:	21 e0       	ldi	r18, 0x01	; 1
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	b9 01       	movw	r22, r18
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_WriteChannel+0xbc>
 3e4:	66 0f       	add	r22, r22
 3e6:	77 1f       	adc	r23, r23
 3e8:	8a 95       	dec	r24
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_WriteChannel+0xb8>
 3ec:	cb 01       	movw	r24, r22
 3ee:	80 95       	com	r24
 3f0:	84 23       	and	r24, r20
 3f2:	85 bb       	out	0x15, r24	; 21
 3f4:	08 95       	ret
 3f6:	61 30       	cpi	r22, 0x01	; 1
 3f8:	69 f4       	brne	.+26     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3fa:	42 b3       	in	r20, 0x12	; 18
 3fc:	21 e0       	ldi	r18, 0x01	; 1
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	b9 01       	movw	r22, r18
 402:	02 c0       	rjmp	.+4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 404:	66 0f       	add	r22, r22
 406:	77 1f       	adc	r23, r23
 408:	8a 95       	dec	r24
 40a:	e2 f7       	brpl	.-8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 40c:	cb 01       	movw	r24, r22
 40e:	84 2b       	or	r24, r20
 410:	82 bb       	out	0x12, r24	; 18
 412:	08 95       	ret
 414:	42 b3       	in	r20, 0x12	; 18
 416:	21 e0       	ldi	r18, 0x01	; 1
 418:	30 e0       	ldi	r19, 0x00	; 0
 41a:	b9 01       	movw	r22, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 41e:	66 0f       	add	r22, r22
 420:	77 1f       	adc	r23, r23
 422:	8a 95       	dec	r24
 424:	e2 f7       	brpl	.-8      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 426:	cb 01       	movw	r24, r22
 428:	80 95       	com	r24
 42a:	84 23       	and	r24, r20
 42c:	82 bb       	out	0x12, r24	; 18
 42e:	08 95       	ret

00000430 <DIO_ReadChannel>:
 430:	98 2f       	mov	r25, r24
 432:	96 95       	lsr	r25
 434:	96 95       	lsr	r25
 436:	96 95       	lsr	r25
 438:	48 2f       	mov	r20, r24
 43a:	47 70       	andi	r20, 0x07	; 7
 43c:	91 30       	cpi	r25, 0x01	; 1
 43e:	81 f0       	breq	.+32     	; 0x460 <DIO_ReadChannel+0x30>
 440:	28 f0       	brcs	.+10     	; 0x44c <DIO_ReadChannel+0x1c>
 442:	92 30       	cpi	r25, 0x02	; 2
 444:	b9 f0       	breq	.+46     	; 0x474 <DIO_ReadChannel+0x44>
 446:	93 30       	cpi	r25, 0x03	; 3
 448:	f9 f0       	breq	.+62     	; 0x488 <DIO_ReadChannel+0x58>
 44a:	28 c0       	rjmp	.+80     	; 0x49c <DIO_ReadChannel+0x6c>
 44c:	99 b3       	in	r25, 0x19	; 25
 44e:	89 2f       	mov	r24, r25
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	02 c0       	rjmp	.+4      	; 0x458 <DIO_ReadChannel+0x28>
 454:	95 95       	asr	r25
 456:	87 95       	ror	r24
 458:	4a 95       	dec	r20
 45a:	e2 f7       	brpl	.-8      	; 0x454 <DIO_ReadChannel+0x24>
 45c:	81 70       	andi	r24, 0x01	; 1
 45e:	08 95       	ret
 460:	26 b3       	in	r18, 0x16	; 22
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	c9 01       	movw	r24, r18
 466:	02 c0       	rjmp	.+4      	; 0x46c <DIO_ReadChannel+0x3c>
 468:	95 95       	asr	r25
 46a:	87 95       	ror	r24
 46c:	4a 95       	dec	r20
 46e:	e2 f7       	brpl	.-8      	; 0x468 <DIO_ReadChannel+0x38>
 470:	81 70       	andi	r24, 0x01	; 1
 472:	08 95       	ret
 474:	23 b3       	in	r18, 0x13	; 19
 476:	30 e0       	ldi	r19, 0x00	; 0
 478:	c9 01       	movw	r24, r18
 47a:	02 c0       	rjmp	.+4      	; 0x480 <DIO_ReadChannel+0x50>
 47c:	95 95       	asr	r25
 47e:	87 95       	ror	r24
 480:	4a 95       	dec	r20
 482:	e2 f7       	brpl	.-8      	; 0x47c <DIO_ReadChannel+0x4c>
 484:	81 70       	andi	r24, 0x01	; 1
 486:	08 95       	ret
 488:	20 b3       	in	r18, 0x10	; 16
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	c9 01       	movw	r24, r18
 48e:	02 c0       	rjmp	.+4      	; 0x494 <DIO_ReadChannel+0x64>
 490:	95 95       	asr	r25
 492:	87 95       	ror	r24
 494:	4a 95       	dec	r20
 496:	e2 f7       	brpl	.-8      	; 0x490 <DIO_ReadChannel+0x60>
 498:	81 70       	andi	r24, 0x01	; 1
 49a:	08 95       	ret
 49c:	80 e0       	ldi	r24, 0x00	; 0
 49e:	08 95       	ret

000004a0 <DIO_ConfigChannel>:
 4a0:	98 2f       	mov	r25, r24
 4a2:	96 95       	lsr	r25
 4a4:	96 95       	lsr	r25
 4a6:	96 95       	lsr	r25
 4a8:	87 70       	andi	r24, 0x07	; 7
 4aa:	91 30       	cpi	r25, 0x01	; 1
 4ac:	21 f1       	breq	.+72     	; 0x4f6 <DIO_ConfigChannel+0x56>
 4ae:	30 f0       	brcs	.+12     	; 0x4bc <DIO_ConfigChannel+0x1c>
 4b0:	92 30       	cpi	r25, 0x02	; 2
 4b2:	f1 f1       	breq	.+124    	; 0x530 <DIO_ConfigChannel+0x90>
 4b4:	93 30       	cpi	r25, 0x03	; 3
 4b6:	09 f4       	brne	.+2      	; 0x4ba <DIO_ConfigChannel+0x1a>
 4b8:	58 c0       	rjmp	.+176    	; 0x56a <DIO_ConfigChannel+0xca>
 4ba:	08 95       	ret
 4bc:	61 30       	cpi	r22, 0x01	; 1
 4be:	69 f4       	brne	.+26     	; 0x4da <DIO_ConfigChannel+0x3a>
 4c0:	4a b3       	in	r20, 0x1a	; 26
 4c2:	21 e0       	ldi	r18, 0x01	; 1
 4c4:	30 e0       	ldi	r19, 0x00	; 0
 4c6:	b9 01       	movw	r22, r18
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <DIO_ConfigChannel+0x2e>
 4ca:	66 0f       	add	r22, r22
 4cc:	77 1f       	adc	r23, r23
 4ce:	8a 95       	dec	r24
 4d0:	e2 f7       	brpl	.-8      	; 0x4ca <DIO_ConfigChannel+0x2a>
 4d2:	cb 01       	movw	r24, r22
 4d4:	84 2b       	or	r24, r20
 4d6:	8a bb       	out	0x1a, r24	; 26
 4d8:	08 95       	ret
 4da:	4a b3       	in	r20, 0x1a	; 26
 4dc:	21 e0       	ldi	r18, 0x01	; 1
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	b9 01       	movw	r22, r18
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <DIO_ConfigChannel+0x48>
 4e4:	66 0f       	add	r22, r22
 4e6:	77 1f       	adc	r23, r23
 4e8:	8a 95       	dec	r24
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <DIO_ConfigChannel+0x44>
 4ec:	cb 01       	movw	r24, r22
 4ee:	80 95       	com	r24
 4f0:	84 23       	and	r24, r20
 4f2:	8a bb       	out	0x1a, r24	; 26
 4f4:	08 95       	ret
 4f6:	61 30       	cpi	r22, 0x01	; 1
 4f8:	69 f4       	brne	.+26     	; 0x514 <DIO_ConfigChannel+0x74>
 4fa:	47 b3       	in	r20, 0x17	; 23
 4fc:	21 e0       	ldi	r18, 0x01	; 1
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	b9 01       	movw	r22, r18
 502:	02 c0       	rjmp	.+4      	; 0x508 <DIO_ConfigChannel+0x68>
 504:	66 0f       	add	r22, r22
 506:	77 1f       	adc	r23, r23
 508:	8a 95       	dec	r24
 50a:	e2 f7       	brpl	.-8      	; 0x504 <DIO_ConfigChannel+0x64>
 50c:	cb 01       	movw	r24, r22
 50e:	84 2b       	or	r24, r20
 510:	87 bb       	out	0x17, r24	; 23
 512:	08 95       	ret
 514:	47 b3       	in	r20, 0x17	; 23
 516:	21 e0       	ldi	r18, 0x01	; 1
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	b9 01       	movw	r22, r18
 51c:	02 c0       	rjmp	.+4      	; 0x522 <DIO_ConfigChannel+0x82>
 51e:	66 0f       	add	r22, r22
 520:	77 1f       	adc	r23, r23
 522:	8a 95       	dec	r24
 524:	e2 f7       	brpl	.-8      	; 0x51e <DIO_ConfigChannel+0x7e>
 526:	cb 01       	movw	r24, r22
 528:	80 95       	com	r24
 52a:	84 23       	and	r24, r20
 52c:	87 bb       	out	0x17, r24	; 23
 52e:	08 95       	ret
 530:	61 30       	cpi	r22, 0x01	; 1
 532:	69 f4       	brne	.+26     	; 0x54e <DIO_ConfigChannel+0xae>
 534:	44 b3       	in	r20, 0x14	; 20
 536:	21 e0       	ldi	r18, 0x01	; 1
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	b9 01       	movw	r22, r18
 53c:	02 c0       	rjmp	.+4      	; 0x542 <DIO_ConfigChannel+0xa2>
 53e:	66 0f       	add	r22, r22
 540:	77 1f       	adc	r23, r23
 542:	8a 95       	dec	r24
 544:	e2 f7       	brpl	.-8      	; 0x53e <DIO_ConfigChannel+0x9e>
 546:	cb 01       	movw	r24, r22
 548:	84 2b       	or	r24, r20
 54a:	84 bb       	out	0x14, r24	; 20
 54c:	08 95       	ret
 54e:	44 b3       	in	r20, 0x14	; 20
 550:	21 e0       	ldi	r18, 0x01	; 1
 552:	30 e0       	ldi	r19, 0x00	; 0
 554:	b9 01       	movw	r22, r18
 556:	02 c0       	rjmp	.+4      	; 0x55c <DIO_ConfigChannel+0xbc>
 558:	66 0f       	add	r22, r22
 55a:	77 1f       	adc	r23, r23
 55c:	8a 95       	dec	r24
 55e:	e2 f7       	brpl	.-8      	; 0x558 <DIO_ConfigChannel+0xb8>
 560:	cb 01       	movw	r24, r22
 562:	80 95       	com	r24
 564:	84 23       	and	r24, r20
 566:	84 bb       	out	0x14, r24	; 20
 568:	08 95       	ret
 56a:	61 30       	cpi	r22, 0x01	; 1
 56c:	69 f4       	brne	.+26     	; 0x588 <DIO_ConfigChannel+0xe8>
 56e:	41 b3       	in	r20, 0x11	; 17
 570:	21 e0       	ldi	r18, 0x01	; 1
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	b9 01       	movw	r22, r18
 576:	02 c0       	rjmp	.+4      	; 0x57c <DIO_ConfigChannel+0xdc>
 578:	66 0f       	add	r22, r22
 57a:	77 1f       	adc	r23, r23
 57c:	8a 95       	dec	r24
 57e:	e2 f7       	brpl	.-8      	; 0x578 <DIO_ConfigChannel+0xd8>
 580:	cb 01       	movw	r24, r22
 582:	84 2b       	or	r24, r20
 584:	81 bb       	out	0x11, r24	; 17
 586:	08 95       	ret
 588:	41 b3       	in	r20, 0x11	; 17
 58a:	21 e0       	ldi	r18, 0x01	; 1
 58c:	30 e0       	ldi	r19, 0x00	; 0
 58e:	b9 01       	movw	r22, r18
 590:	02 c0       	rjmp	.+4      	; 0x596 <DIO_ConfigChannel+0xf6>
 592:	66 0f       	add	r22, r22
 594:	77 1f       	adc	r23, r23
 596:	8a 95       	dec	r24
 598:	e2 f7       	brpl	.-8      	; 0x592 <DIO_ConfigChannel+0xf2>
 59a:	cb 01       	movw	r24, r22
 59c:	80 95       	com	r24
 59e:	84 23       	and	r24, r20
 5a0:	81 bb       	out	0x11, r24	; 17
 5a2:	08 95       	ret

000005a4 <DIO_ReadPort>:
 5a4:	81 30       	cpi	r24, 0x01	; 1
 5a6:	41 f0       	breq	.+16     	; 0x5b8 <DIO_ReadPort+0x14>
 5a8:	28 f0       	brcs	.+10     	; 0x5b4 <DIO_ReadPort+0x10>
 5aa:	82 30       	cpi	r24, 0x02	; 2
 5ac:	39 f0       	breq	.+14     	; 0x5bc <DIO_ReadPort+0x18>
 5ae:	83 30       	cpi	r24, 0x03	; 3
 5b0:	39 f0       	breq	.+14     	; 0x5c0 <DIO_ReadPort+0x1c>
 5b2:	08 c0       	rjmp	.+16     	; 0x5c4 <DIO_ReadPort+0x20>
 5b4:	8b b3       	in	r24, 0x1b	; 27
 5b6:	08 95       	ret
 5b8:	88 b3       	in	r24, 0x18	; 24
 5ba:	08 95       	ret
 5bc:	85 b3       	in	r24, 0x15	; 21
 5be:	08 95       	ret
 5c0:	82 b3       	in	r24, 0x12	; 18
 5c2:	08 95       	ret
 5c4:	80 e0       	ldi	r24, 0x00	; 0
 5c6:	08 95       	ret

000005c8 <DIO_WritePort>:
 5c8:	81 30       	cpi	r24, 0x01	; 1
 5ca:	41 f0       	breq	.+16     	; 0x5dc <DIO_WritePort+0x14>
 5cc:	28 f0       	brcs	.+10     	; 0x5d8 <DIO_WritePort+0x10>
 5ce:	82 30       	cpi	r24, 0x02	; 2
 5d0:	39 f0       	breq	.+14     	; 0x5e0 <DIO_WritePort+0x18>
 5d2:	83 30       	cpi	r24, 0x03	; 3
 5d4:	39 f0       	breq	.+14     	; 0x5e4 <DIO_WritePort+0x1c>
 5d6:	08 95       	ret
 5d8:	6b bb       	out	0x1b, r22	; 27
 5da:	08 95       	ret
 5dc:	68 bb       	out	0x18, r22	; 24
 5de:	08 95       	ret
 5e0:	65 bb       	out	0x15, r22	; 21
 5e2:	08 95       	ret
 5e4:	62 bb       	out	0x12, r22	; 18
 5e6:	08 95       	ret

000005e8 <DIO_Init>:
 5e8:	80 e0       	ldi	r24, 0x00	; 0
 5ea:	a0 c0       	rjmp	.+320    	; 0x72c <DIO_Init+0x144>
 5ec:	98 2f       	mov	r25, r24
 5ee:	96 95       	lsr	r25
 5f0:	96 95       	lsr	r25
 5f2:	96 95       	lsr	r25
 5f4:	28 2f       	mov	r18, r24
 5f6:	27 70       	andi	r18, 0x07	; 7
 5f8:	91 30       	cpi	r25, 0x01	; 1
 5fa:	61 f1       	breq	.+88     	; 0x654 <DIO_Init+0x6c>
 5fc:	38 f0       	brcs	.+14     	; 0x60c <DIO_Init+0x24>
 5fe:	92 30       	cpi	r25, 0x02	; 2
 600:	09 f4       	brne	.+2      	; 0x604 <DIO_Init+0x1c>
 602:	4c c0       	rjmp	.+152    	; 0x69c <DIO_Init+0xb4>
 604:	93 30       	cpi	r25, 0x03	; 3
 606:	09 f4       	brne	.+2      	; 0x60a <DIO_Init+0x22>
 608:	6d c0       	rjmp	.+218    	; 0x6e4 <DIO_Init+0xfc>
 60a:	8f c0       	rjmp	.+286    	; 0x72a <DIO_Init+0x142>
 60c:	e8 2f       	mov	r30, r24
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	ee 0f       	add	r30, r30
 612:	ff 1f       	adc	r31, r31
 614:	e0 5a       	subi	r30, 0xA0	; 160
 616:	ff 4f       	sbci	r31, 0xFF	; 255
 618:	90 81       	ld	r25, Z
 61a:	91 30       	cpi	r25, 0x01	; 1
 61c:	69 f4       	brne	.+26     	; 0x638 <DIO_Init+0x50>
 61e:	9a b3       	in	r25, 0x1a	; 26
 620:	41 e0       	ldi	r20, 0x01	; 1
 622:	50 e0       	ldi	r21, 0x00	; 0
 624:	ba 01       	movw	r22, r20
 626:	02 c0       	rjmp	.+4      	; 0x62c <DIO_Init+0x44>
 628:	66 0f       	add	r22, r22
 62a:	77 1f       	adc	r23, r23
 62c:	2a 95       	dec	r18
 62e:	e2 f7       	brpl	.-8      	; 0x628 <DIO_Init+0x40>
 630:	9b 01       	movw	r18, r22
 632:	29 2b       	or	r18, r25
 634:	2a bb       	out	0x1a, r18	; 26
 636:	79 c0       	rjmp	.+242    	; 0x72a <DIO_Init+0x142>
 638:	9a b3       	in	r25, 0x1a	; 26
 63a:	41 e0       	ldi	r20, 0x01	; 1
 63c:	50 e0       	ldi	r21, 0x00	; 0
 63e:	ba 01       	movw	r22, r20
 640:	02 c0       	rjmp	.+4      	; 0x646 <DIO_Init+0x5e>
 642:	66 0f       	add	r22, r22
 644:	77 1f       	adc	r23, r23
 646:	2a 95       	dec	r18
 648:	e2 f7       	brpl	.-8      	; 0x642 <DIO_Init+0x5a>
 64a:	9b 01       	movw	r18, r22
 64c:	20 95       	com	r18
 64e:	29 23       	and	r18, r25
 650:	2a bb       	out	0x1a, r18	; 26
 652:	6b c0       	rjmp	.+214    	; 0x72a <DIO_Init+0x142>
 654:	e8 2f       	mov	r30, r24
 656:	f0 e0       	ldi	r31, 0x00	; 0
 658:	ee 0f       	add	r30, r30
 65a:	ff 1f       	adc	r31, r31
 65c:	e0 5a       	subi	r30, 0xA0	; 160
 65e:	ff 4f       	sbci	r31, 0xFF	; 255
 660:	90 81       	ld	r25, Z
 662:	91 30       	cpi	r25, 0x01	; 1
 664:	69 f4       	brne	.+26     	; 0x680 <DIO_Init+0x98>
 666:	97 b3       	in	r25, 0x17	; 23
 668:	41 e0       	ldi	r20, 0x01	; 1
 66a:	50 e0       	ldi	r21, 0x00	; 0
 66c:	ba 01       	movw	r22, r20
 66e:	02 c0       	rjmp	.+4      	; 0x674 <DIO_Init+0x8c>
 670:	66 0f       	add	r22, r22
 672:	77 1f       	adc	r23, r23
 674:	2a 95       	dec	r18
 676:	e2 f7       	brpl	.-8      	; 0x670 <DIO_Init+0x88>
 678:	9b 01       	movw	r18, r22
 67a:	29 2b       	or	r18, r25
 67c:	27 bb       	out	0x17, r18	; 23
 67e:	55 c0       	rjmp	.+170    	; 0x72a <DIO_Init+0x142>
 680:	97 b3       	in	r25, 0x17	; 23
 682:	41 e0       	ldi	r20, 0x01	; 1
 684:	50 e0       	ldi	r21, 0x00	; 0
 686:	ba 01       	movw	r22, r20
 688:	02 c0       	rjmp	.+4      	; 0x68e <DIO_Init+0xa6>
 68a:	66 0f       	add	r22, r22
 68c:	77 1f       	adc	r23, r23
 68e:	2a 95       	dec	r18
 690:	e2 f7       	brpl	.-8      	; 0x68a <DIO_Init+0xa2>
 692:	9b 01       	movw	r18, r22
 694:	20 95       	com	r18
 696:	29 23       	and	r18, r25
 698:	27 bb       	out	0x17, r18	; 23
 69a:	47 c0       	rjmp	.+142    	; 0x72a <DIO_Init+0x142>
 69c:	e8 2f       	mov	r30, r24
 69e:	f0 e0       	ldi	r31, 0x00	; 0
 6a0:	ee 0f       	add	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	e0 5a       	subi	r30, 0xA0	; 160
 6a6:	ff 4f       	sbci	r31, 0xFF	; 255
 6a8:	90 81       	ld	r25, Z
 6aa:	91 30       	cpi	r25, 0x01	; 1
 6ac:	69 f4       	brne	.+26     	; 0x6c8 <DIO_Init+0xe0>
 6ae:	94 b3       	in	r25, 0x14	; 20
 6b0:	41 e0       	ldi	r20, 0x01	; 1
 6b2:	50 e0       	ldi	r21, 0x00	; 0
 6b4:	ba 01       	movw	r22, r20
 6b6:	02 c0       	rjmp	.+4      	; 0x6bc <DIO_Init+0xd4>
 6b8:	66 0f       	add	r22, r22
 6ba:	77 1f       	adc	r23, r23
 6bc:	2a 95       	dec	r18
 6be:	e2 f7       	brpl	.-8      	; 0x6b8 <DIO_Init+0xd0>
 6c0:	9b 01       	movw	r18, r22
 6c2:	29 2b       	or	r18, r25
 6c4:	24 bb       	out	0x14, r18	; 20
 6c6:	31 c0       	rjmp	.+98     	; 0x72a <DIO_Init+0x142>
 6c8:	94 b3       	in	r25, 0x14	; 20
 6ca:	41 e0       	ldi	r20, 0x01	; 1
 6cc:	50 e0       	ldi	r21, 0x00	; 0
 6ce:	ba 01       	movw	r22, r20
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <DIO_Init+0xee>
 6d2:	66 0f       	add	r22, r22
 6d4:	77 1f       	adc	r23, r23
 6d6:	2a 95       	dec	r18
 6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <DIO_Init+0xea>
 6da:	9b 01       	movw	r18, r22
 6dc:	20 95       	com	r18
 6de:	29 23       	and	r18, r25
 6e0:	24 bb       	out	0x14, r18	; 20
 6e2:	23 c0       	rjmp	.+70     	; 0x72a <DIO_Init+0x142>
 6e4:	e8 2f       	mov	r30, r24
 6e6:	f0 e0       	ldi	r31, 0x00	; 0
 6e8:	ee 0f       	add	r30, r30
 6ea:	ff 1f       	adc	r31, r31
 6ec:	e0 5a       	subi	r30, 0xA0	; 160
 6ee:	ff 4f       	sbci	r31, 0xFF	; 255
 6f0:	90 81       	ld	r25, Z
 6f2:	91 30       	cpi	r25, 0x01	; 1
 6f4:	69 f4       	brne	.+26     	; 0x710 <DIO_Init+0x128>
 6f6:	91 b3       	in	r25, 0x11	; 17
 6f8:	41 e0       	ldi	r20, 0x01	; 1
 6fa:	50 e0       	ldi	r21, 0x00	; 0
 6fc:	ba 01       	movw	r22, r20
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <DIO_Init+0x11c>
 700:	66 0f       	add	r22, r22
 702:	77 1f       	adc	r23, r23
 704:	2a 95       	dec	r18
 706:	e2 f7       	brpl	.-8      	; 0x700 <DIO_Init+0x118>
 708:	9b 01       	movw	r18, r22
 70a:	29 2b       	or	r18, r25
 70c:	21 bb       	out	0x11, r18	; 17
 70e:	0d c0       	rjmp	.+26     	; 0x72a <DIO_Init+0x142>
 710:	91 b3       	in	r25, 0x11	; 17
 712:	41 e0       	ldi	r20, 0x01	; 1
 714:	50 e0       	ldi	r21, 0x00	; 0
 716:	ba 01       	movw	r22, r20
 718:	02 c0       	rjmp	.+4      	; 0x71e <DIO_Init+0x136>
 71a:	66 0f       	add	r22, r22
 71c:	77 1f       	adc	r23, r23
 71e:	2a 95       	dec	r18
 720:	e2 f7       	brpl	.-8      	; 0x71a <DIO_Init+0x132>
 722:	9b 01       	movw	r18, r22
 724:	20 95       	com	r18
 726:	29 23       	and	r18, r25
 728:	21 bb       	out	0x11, r18	; 17
 72a:	8f 5f       	subi	r24, 0xFF	; 255
 72c:	80 32       	cpi	r24, 0x20	; 32
 72e:	08 f4       	brcc	.+2      	; 0x732 <DIO_Init+0x14a>
 730:	5d cf       	rjmp	.-326    	; 0x5ec <DIO_Init+0x4>
 732:	08 95       	ret

00000734 <SPI_Init>:
 734:	cf 93       	push	r28
 736:	df 93       	push	r29
 738:	ec 01       	movw	r28, r24
 73a:	88 81       	ld	r24, Y
 73c:	88 23       	and	r24, r24
 73e:	c9 f0       	breq	.+50     	; 0x772 <SPI_Init+0x3e>
 740:	81 30       	cpi	r24, 0x01	; 1
 742:	69 f5       	brne	.+90     	; 0x79e <SPI_Init+0x6a>
 744:	61 e0       	ldi	r22, 0x01	; 1
 746:	8c e0       	ldi	r24, 0x0C	; 12
 748:	0e 94 50 02 	call	0x4a0	; 0x4a0 <DIO_ConfigChannel>
 74c:	61 e0       	ldi	r22, 0x01	; 1
 74e:	8d e0       	ldi	r24, 0x0D	; 13
 750:	0e 94 50 02 	call	0x4a0	; 0x4a0 <DIO_ConfigChannel>
 754:	60 e0       	ldi	r22, 0x00	; 0
 756:	8e e0       	ldi	r24, 0x0E	; 14
 758:	0e 94 50 02 	call	0x4a0	; 0x4a0 <DIO_ConfigChannel>
 75c:	61 e0       	ldi	r22, 0x01	; 1
 75e:	8f e0       	ldi	r24, 0x0F	; 15
 760:	0e 94 50 02 	call	0x4a0	; 0x4a0 <DIO_ConfigChannel>
 764:	8d b1       	in	r24, 0x0d	; 13
 766:	80 61       	ori	r24, 0x10	; 16
 768:	8d b9       	out	0x0d, r24	; 13
 76a:	8d b1       	in	r24, 0x0d	; 13
 76c:	80 64       	ori	r24, 0x40	; 64
 76e:	8d b9       	out	0x0d, r24	; 13
 770:	16 c0       	rjmp	.+44     	; 0x79e <SPI_Init+0x6a>
 772:	60 e0       	ldi	r22, 0x00	; 0
 774:	8c e0       	ldi	r24, 0x0C	; 12
 776:	0e 94 50 02 	call	0x4a0	; 0x4a0 <DIO_ConfigChannel>
 77a:	60 e0       	ldi	r22, 0x00	; 0
 77c:	8d e0       	ldi	r24, 0x0D	; 13
 77e:	0e 94 50 02 	call	0x4a0	; 0x4a0 <DIO_ConfigChannel>
 782:	61 e0       	ldi	r22, 0x01	; 1
 784:	8e e0       	ldi	r24, 0x0E	; 14
 786:	0e 94 50 02 	call	0x4a0	; 0x4a0 <DIO_ConfigChannel>
 78a:	60 e0       	ldi	r22, 0x00	; 0
 78c:	8f e0       	ldi	r24, 0x0F	; 15
 78e:	0e 94 50 02 	call	0x4a0	; 0x4a0 <DIO_ConfigChannel>
 792:	8d b1       	in	r24, 0x0d	; 13
 794:	8f 7e       	andi	r24, 0xEF	; 239
 796:	8d b9       	out	0x0d, r24	; 13
 798:	8d b1       	in	r24, 0x0d	; 13
 79a:	80 64       	ori	r24, 0x40	; 64
 79c:	8d b9       	out	0x0d, r24	; 13
 79e:	2d b1       	in	r18, 0x0d	; 13
 7a0:	99 81       	ldd	r25, Y+1	; 0x01
 7a2:	30 e2       	ldi	r19, 0x20	; 32
 7a4:	93 9f       	mul	r25, r19
 7a6:	c0 01       	movw	r24, r0
 7a8:	11 24       	eor	r1, r1
 7aa:	82 2b       	or	r24, r18
 7ac:	8d b9       	out	0x0d, r24	; 13
 7ae:	8b 81       	ldd	r24, Y+3	; 0x03
 7b0:	81 30       	cpi	r24, 0x01	; 1
 7b2:	41 f4       	brne	.+16     	; 0x7c4 <SPI_Init+0x90>
 7b4:	8e b1       	in	r24, 0x0e	; 14
 7b6:	81 60       	ori	r24, 0x01	; 1
 7b8:	8e b9       	out	0x0e, r24	; 14
 7ba:	9d b1       	in	r25, 0x0d	; 13
 7bc:	8a 81       	ldd	r24, Y+2	; 0x02
 7be:	89 2b       	or	r24, r25
 7c0:	8d b9       	out	0x0d, r24	; 13
 7c2:	07 c0       	rjmp	.+14     	; 0x7d2 <SPI_Init+0x9e>
 7c4:	8e b1       	in	r24, 0x0e	; 14
 7c6:	8e 7f       	andi	r24, 0xFE	; 254
 7c8:	8e b9       	out	0x0e, r24	; 14
 7ca:	9d b1       	in	r25, 0x0d	; 13
 7cc:	8a 81       	ldd	r24, Y+2	; 0x02
 7ce:	89 2b       	or	r24, r25
 7d0:	8d b9       	out	0x0d, r24	; 13
 7d2:	df 91       	pop	r29
 7d4:	cf 91       	pop	r28
 7d6:	08 95       	ret

000007d8 <SPI_TxRx>:
 7d8:	8f b9       	out	0x0f, r24	; 15
 7da:	77 9b       	sbis	0x0e, 7	; 14
 7dc:	fe cf       	rjmp	.-4      	; 0x7da <SPI_TxRx+0x2>
 7de:	8f b1       	in	r24, 0x0f	; 15
 7e0:	08 95       	ret

000007e2 <_exit>:
 7e2:	f8 94       	cli

000007e4 <__stop_program>:
 7e4:	ff cf       	rjmp	.-2      	; 0x7e4 <__stop_program>
